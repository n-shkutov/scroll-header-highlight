{"version":3,"sources":["js/loaded.js","js/inView.js","js/scrollTracker.js","index.js"],"names":["loaded","fnArray","length","window","addEventListener","event","forEach","fn","inView","selector","cb","target","document","querySelector","IntersectionObserver","entries","entry","isIntersecting","observe","wrapper","offsetHeight","innerHeight","headers","querySelectorAll","reverse","pxPart","Math","floor","headerIdx","scrollHandler","currentTarget","scrollY","nextIdx","console","log","classList","remove","add","init","end","removeEventListener","inV"],"mappings":"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","file":"scroll-header-highlight.00b14d71.js","sourceRoot":"..","sourcesContent":["const loaded = (fnArray = []) => {\n    if (!fnArray.length) return;\n\n    window.addEventListener('DOMContentLoaded', (event) => {\n        fnArray.forEach(fn => fn());\n    });\n}\n\nexport default loaded;","const inView = (selector, cb = () => { }) => {\n    if (!selector) return;\n\n    const target = document.querySelector(selector)\n\n    let callback = (entries) => {\n        entries.forEach(entry => {\n            cb(entry.isIntersecting)\n        });\n    };\n\n    let observer = new IntersectionObserver(callback);\n\n    observer.observe(target);\n}\n\nexport default inView;\n","const wrapper = document.querySelector('.wrapper');\n\n// Нужна вся высота контейнера\nconst { offsetHeight } = wrapper;\n\n// Нужна высота окна браузера\nconst { innerHeight } = window;\n\n// Получили все элементы, которые хотим подсвечивать (по требованию -- задом на перёд)\nconst headers = [...document.querySelectorAll('h3')].reverse();\n\n// Какова часть каждого элемента (в нашем случае хедера) от общей высоты\nconst pxPart = Math.floor((offsetHeight - innerHeight) / headers.length);\n\n// Нам нужно знать предыдущий элемент с селектором, чтобы убирать его и ставить новый\nlet headerIdx = null;\n\nconst scrollHandler = ({ currentTarget }) => {\n\n    const { scrollY } = currentTarget;\n\n    let nextIdx = Math.floor(scrollY / pxPart);\n\n    console.log(nextIdx)\n\n    if (nextIdx < 0 || nextIdx + 1 > headers.length) {\n\n        if (headerIdx !== null) headers[headerIdx].classList.remove('active');\n\n        headerIdx = null;\n\n        return;\n    }\n\n    if (headerIdx === null) {\n        headerIdx = nextIdx;\n\n        headers[headerIdx].classList.add('active');\n\n    } else if (headerIdx !== nextIdx) {\n\n        headers[headerIdx].classList.remove('active');\n        headers[nextIdx].classList.add('active');\n\n        headerIdx = nextIdx;\n    }\n\n};\n\nexport default {\n    init: () => window.addEventListener('scroll', scrollHandler),\n    end: () => window.removeEventListener('scroll', scrollHandler)\n}","'use strict';\n\nimport loaded from \"./js/loaded\";\nimport inView from \"./js/inView\";\nimport scrollTracker from \"./js/scrollTracker\";\n\nconst scrollHandler = () => {\n    inView('.container', inV => {\n        if (inV) {\n            scrollTracker.init();\n        } else {\n            scrollTracker.end();\n        }\n    })\n}\n\nloaded([scrollHandler]);"]}